clear; MS=$(printf "%75s"); a="awk"; ec="echo"; vmafd="/usr/lib/vmware-vmafd/bin/vmafd-cli"; $ec ${MS// /-}; scs="service-control --status"; g="grep"; pgconn="/opt/vmware/vpostgres/current/bin/psql -d VCDB -U postgres"; $ec -en "\e[31m\e[1m$(cat /etc/issue| $g Type| sed 's/Type: //')"; cat /etc/issue| $g VMware| $a '{print " - " $NF}'; $ec -e "\e[0mDate & Time: $(date)"; vpxd -v| $a '{print "VC version :",$3,$4}'; $ec "Hostname   : $(hostname -f)"; $vmafd get-ls-location --server-name localhost| $a -F "/" '{print $3}'| $a -F ":" '{print "PSC        :",$1}'; $ec -e "PNID       : $($vmafd get-pnid --server-name localhost)"; $ec -en "Machine ID : "; $vmafd get-machine-id --server-name localhost; $ec -en "Node ID    : "; $ec $(cat /etc/vmware/install-defaults/vmdir.ldu-guid); networkctl status| e$g 'Gateway|Address'| sed 's/^ \+//'| sed -e 's/Address/IP address /' -e 's/Gateway/Gateway    /'; ifconfig eth0| $g Mask| $a -F ":" '{print "Subnet     :",$4}'; $ec "DNS        : $(cat /etc/resolv.conf| $g nameserver| $a '{print $2}'| paste -sd ,| sed 's/,/, /g')"; $ec "NTP servers: $(cat /etc/ntp.conf | $g server | $a '{print $2}'| paste -sd ","|sed 's/,/, /g')"; $ec "Hosts file : /etc/hosts";cat /etc/hosts | e$g -v "#|^$"| $a '{print "           : "$0}'; $ec -e "VC Domain  : $(/opt/likewise/bin/lwregshell list_values '[HKEY_THIS_MACHINE\Services\vmafd\Parameters]'| $g DomainName| $a '{print $4}'| tr -d \")"; /opt/likewise/bin/domainjoin-cli query| $g Domain| sed 's/^Domain =/AD Domain  :/'; $ec -n "vPostgres  : "; du -sh /storage/db/vpostgres/| $a '{print $1, $2}'; du -sh /storage/seat/vpostgres/| $a '{print "           : "$1, $2}'; if [[ $($scs vpostgres) != *"Running"* ]]; then $ec -e "\e[33m\e[1mvpostgres is not running\e[0m"; else $ec "VCDB Size  : $($pgconn -c "select pg_size_pretty(pg_database_size('VCDB'))"| $g MB| sed 's/^ //g')"; $ec  "Datacenters: $($pgconn -c "select id from vpx_datacenter"| e$g "row)|rows)"| cut -d " " -f1| tr -d \()"; $ec "Clusters   : $($pgconn -c "select id from vpx_compute_resource"| e$g "row)|rows)"| cut -d " " -f1| tr -d \()"; $ec "ESXi Hosts : $($pgconn -c "select id from vpx_host"| $g "rows)"| cut -d " " -f1| tr -d \()"; $ec "VM's       : $($pgconn -c "select id from vpx_vm"| $g "rows)"| cut -d " " -f1| tr -d \()"; fi; $ec "CPU's      : $(cat /proc/cpuinfo| $g -c processor)"; $ec "RAM Total  : $(free --giga | $g Mem| $a '{print $2}')GB"; $ec "RAM Used   : $(free --giga | $g Mem| $a '{print $3}')GB"; $ec "Swap Total : $(free --giga | $g Swap| $a '{print $2}')GB"; $ec "Swap Used  : $(free --giga | $g Mem| $a '{print $3}')GB"; $ec "Proxy      : $(cat /etc/sysconfig/proxy| $g PROXY_ENABLED| cut -d = -f2| tr -d \")"; $ec "Uptime     :$(uptime | sed -e 's/[[:blank:]]\+/ /g'| $a -F "," '{print $1, $2}'| $a -F "up" '{print $2}')"; if [[ "$(df -h)" =~ [7-9][0-9]%|100% ]]; then $ec -e "\e[33m\e[1mDisplaying filesystem greater than 70% usage:\e[0m"; df -h| head -1; df -h| e$g --color=never '[7-9][0-9]%|100%'; else $ec -e "\n\e[33m\e[1mNo filesystems greater than 70%\e[0m"; fi; $ec; if [[ $($scs) =~ "Pending" ]]; then $ec -e "\e[33m\e[1mServices are still starting or stopping\e[0m"; else $scs| sed -e 's/:/ Services:/' -e 's/^ //'; fi; PPS=$PS1; $ec ${MS// /-}; $ec -e "CPU and Mem Usage:"; top -n 1| e$g "Cpu|GiB"| sed 's/GiB/%of/'| e$g -v "root"; PS1=$PPS; PS1=$PPS; $ec ${MS// /-}; history -d $(history | tail -1)

